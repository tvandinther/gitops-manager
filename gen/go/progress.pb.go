// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: progress.proto

package gitops

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProgressKind int32

const (
	ProgressKind_UNKNOWN  ProgressKind = 0
	ProgressKind_HEADING  ProgressKind = 1
	ProgressKind_PROGRESS ProgressKind = 2
	ProgressKind_SUCCESS  ProgressKind = 3
	ProgressKind_FAILURE  ProgressKind = 4
)

// Enum value maps for ProgressKind.
var (
	ProgressKind_name = map[int32]string{
		0: "UNKNOWN",
		1: "HEADING",
		2: "PROGRESS",
		3: "SUCCESS",
		4: "FAILURE",
	}
	ProgressKind_value = map[string]int32{
		"UNKNOWN":  0,
		"HEADING":  1,
		"PROGRESS": 2,
		"SUCCESS":  3,
		"FAILURE":  4,
	}
)

func (x ProgressKind) Enum() *ProgressKind {
	p := new(ProgressKind)
	*p = x
	return p
}

func (x ProgressKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProgressKind) Descriptor() protoreflect.EnumDescriptor {
	return file_progress_proto_enumTypes[0].Descriptor()
}

func (ProgressKind) Type() protoreflect.EnumType {
	return &file_progress_proto_enumTypes[0]
}

func (x ProgressKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProgressKind.Descriptor instead.
func (ProgressKind) EnumDescriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{0}
}

type Progress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          ProgressKind           `protobuf:"varint,1,opt,name=kind,proto3,enum=gitops.ProgressKind" json:"kind,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Progress) Reset() {
	*x = Progress{}
	mi := &file_progress_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Progress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Progress) ProtoMessage() {}

func (x *Progress) ProtoReflect() protoreflect.Message {
	mi := &file_progress_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Progress.ProtoReflect.Descriptor instead.
func (*Progress) Descriptor() ([]byte, []int) {
	return file_progress_proto_rawDescGZIP(), []int{0}
}

func (x *Progress) GetKind() ProgressKind {
	if x != nil {
		return x.Kind
	}
	return ProgressKind_UNKNOWN
}

func (x *Progress) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_progress_proto protoreflect.FileDescriptor

const file_progress_proto_rawDesc = "" +
	"\n" +
	"\x0eprogress.proto\x12\x06gitops\"L\n" +
	"\bProgress\x12(\n" +
	"\x04kind\x18\x01 \x01(\x0e2\x14.gitops.ProgressKindR\x04kind\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status*P\n" +
	"\fProgressKind\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aHEADING\x10\x01\x12\f\n" +
	"\bPROGRESS\x10\x02\x12\v\n" +
	"\aSUCCESS\x10\x03\x12\v\n" +
	"\aFAILURE\x10\x04B.Z,github.com/tvandinther/gitops-manager/gitopsb\x06proto3"

var (
	file_progress_proto_rawDescOnce sync.Once
	file_progress_proto_rawDescData []byte
)

func file_progress_proto_rawDescGZIP() []byte {
	file_progress_proto_rawDescOnce.Do(func() {
		file_progress_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_progress_proto_rawDesc), len(file_progress_proto_rawDesc)))
	})
	return file_progress_proto_rawDescData
}

var file_progress_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_progress_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_progress_proto_goTypes = []any{
	(ProgressKind)(0), // 0: gitops.ProgressKind
	(*Progress)(nil),  // 1: gitops.Progress
}
var file_progress_proto_depIdxs = []int32{
	0, // 0: gitops.Progress.kind:type_name -> gitops.ProgressKind
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_progress_proto_init() }
func file_progress_proto_init() {
	if File_progress_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_progress_proto_rawDesc), len(file_progress_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_progress_proto_goTypes,
		DependencyIndexes: file_progress_proto_depIdxs,
		EnumInfos:         file_progress_proto_enumTypes,
		MessageInfos:      file_progress_proto_msgTypes,
	}.Build()
	File_progress_proto = out.File
	file_progress_proto_goTypes = nil
	file_progress_proto_depIdxs = nil
}
