// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: service.proto

package gitops

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ManifestRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*ManifestRequest_Metadata
	//	*ManifestRequest_File
	Content       isManifestRequest_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManifestRequest) Reset() {
	*x = ManifestRequest{}
	mi := &file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManifestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestRequest) ProtoMessage() {}

func (x *ManifestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestRequest.ProtoReflect.Descriptor instead.
func (*ManifestRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *ManifestRequest) GetContent() isManifestRequest_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ManifestRequest) GetMetadata() *UpdateManifestMetadata {
	if x != nil {
		if x, ok := x.Content.(*ManifestRequest_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *ManifestRequest) GetFile() *FileChunk {
	if x != nil {
		if x, ok := x.Content.(*ManifestRequest_File); ok {
			return x.File
		}
	}
	return nil
}

type isManifestRequest_Content interface {
	isManifestRequest_Content()
}

type ManifestRequest_Metadata struct {
	Metadata *UpdateManifestMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type ManifestRequest_File struct {
	File *FileChunk `protobuf:"bytes,2,opt,name=file,proto3,oneof"`
}

func (*ManifestRequest_Metadata) isManifestRequest_Content() {}

func (*ManifestRequest_File) isManifestRequest_Content() {}

type ManifestResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*ManifestResponse_Progress
	//	*ManifestResponse_Summary
	//	*ManifestResponse_Error
	Response      isManifestResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManifestResponse) Reset() {
	*x = ManifestResponse{}
	mi := &file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManifestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManifestResponse) ProtoMessage() {}

func (x *ManifestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManifestResponse.ProtoReflect.Descriptor instead.
func (*ManifestResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *ManifestResponse) GetResponse() isManifestResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ManifestResponse) GetProgress() *Progress {
	if x != nil {
		if x, ok := x.Response.(*ManifestResponse_Progress); ok {
			return x.Progress
		}
	}
	return nil
}

func (x *ManifestResponse) GetSummary() *Summary {
	if x != nil {
		if x, ok := x.Response.(*ManifestResponse_Summary); ok {
			return x.Summary
		}
	}
	return nil
}

func (x *ManifestResponse) GetError() *Error {
	if x != nil {
		if x, ok := x.Response.(*ManifestResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isManifestResponse_Response interface {
	isManifestResponse_Response()
}

type ManifestResponse_Progress struct {
	Progress *Progress `protobuf:"bytes,1,opt,name=progress,proto3,oneof"`
}

type ManifestResponse_Summary struct {
	Summary *Summary `protobuf:"bytes,2,opt,name=summary,proto3,oneof"`
}

type ManifestResponse_Error struct {
	Error *Error `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*ManifestResponse_Progress) isManifestResponse_Response() {}

func (*ManifestResponse_Summary) isManifestResponse_Response() {}

func (*ManifestResponse_Error) isManifestResponse_Response() {}

var File_service_proto protoreflect.FileDescriptor

const file_service_proto_rawDesc = "" +
	"\n" +
	"\rservice.proto\x12\x06gitops\x1a\rrequest.proto\x1a\x0eresponse.proto\x1a\x0eprogress.proto\x1a\ferrors.proto\"\x83\x01\n" +
	"\x0fManifestRequest\x12<\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1e.gitops.UpdateManifestMetadataH\x00R\bmetadata\x12'\n" +
	"\x04file\x18\x02 \x01(\v2\x11.gitops.FileChunkH\x00R\x04fileB\t\n" +
	"\acontent\"\xa2\x01\n" +
	"\x10ManifestResponse\x12.\n" +
	"\bprogress\x18\x01 \x01(\v2\x10.gitops.ProgressH\x00R\bprogress\x12+\n" +
	"\asummary\x18\x02 \x01(\v2\x0f.gitops.SummaryH\x00R\asummary\x12%\n" +
	"\x05error\x18\x03 \x01(\v2\r.gitops.ErrorH\x00R\x05errorB\n" +
	"\n" +
	"\bresponse2R\n" +
	"\x06GitOps\x12H\n" +
	"\x0fUpdateManifests\x12\x17.gitops.ManifestRequest\x1a\x18.gitops.ManifestResponse(\x010\x01B.Z,github.com/tvandinther/gitops-manager/gitopsb\x06proto3"

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData []byte
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)))
	})
	return file_service_proto_rawDescData
}

var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_service_proto_goTypes = []any{
	(*ManifestRequest)(nil),        // 0: gitops.ManifestRequest
	(*ManifestResponse)(nil),       // 1: gitops.ManifestResponse
	(*UpdateManifestMetadata)(nil), // 2: gitops.UpdateManifestMetadata
	(*FileChunk)(nil),              // 3: gitops.FileChunk
	(*Progress)(nil),               // 4: gitops.Progress
	(*Summary)(nil),                // 5: gitops.Summary
	(*Error)(nil),                  // 6: gitops.Error
}
var file_service_proto_depIdxs = []int32{
	2, // 0: gitops.ManifestRequest.metadata:type_name -> gitops.UpdateManifestMetadata
	3, // 1: gitops.ManifestRequest.file:type_name -> gitops.FileChunk
	4, // 2: gitops.ManifestResponse.progress:type_name -> gitops.Progress
	5, // 3: gitops.ManifestResponse.summary:type_name -> gitops.Summary
	6, // 4: gitops.ManifestResponse.error:type_name -> gitops.Error
	0, // 5: gitops.GitOps.UpdateManifests:input_type -> gitops.ManifestRequest
	1, // 6: gitops.GitOps.UpdateManifests:output_type -> gitops.ManifestResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	file_request_proto_init()
	file_response_proto_init()
	file_progress_proto_init()
	file_errors_proto_init()
	file_service_proto_msgTypes[0].OneofWrappers = []any{
		(*ManifestRequest_Metadata)(nil),
		(*ManifestRequest_File)(nil),
	}
	file_service_proto_msgTypes[1].OneofWrappers = []any{
		(*ManifestResponse_Progress)(nil),
		(*ManifestResponse_Summary)(nil),
		(*ManifestResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
